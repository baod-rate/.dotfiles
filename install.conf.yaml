- clean: ['~', '$XDG_CONFIG_HOME']

- shell:
    - [git submodule update --init --recursive, Installing submodules]

# ============
# Common links
# ============
- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true
      force: true

- link:
    # directories
    # -----------
    ~/.config/nvim: neovim
    ~/.config/termite: termite
    ~/.config/firefox: firefox
    ~/.config/colors: colors

    # globs
    # -----
    ~/bin: bin

    # files
    # -----
    # -- gpg
    ~/.config/git: git
    ~/.gnupg/gpg-agent.conf: gnupg/gpg-agent.conf
    ~/.gnupg/sshcontrol: gnupg/sshcontrol

    # -- tmux
    ~/.tmux.conf: tmux/config
    ~/.config/tmux: tmux

    # -- zsh
    ~/.config/zsh: zsh
    ~/.zshenv: zshenv

    # -- bash
    ~/.bash_env: bash_env
    ~/.bash_env.d: bash_env.d
    ~/.bash_profile: bash_profile
    ~/.bash_profile.d: bash_profile.d
    ~/.bash_logout: bash_logout
    ~/.bashrc: bashrc

    # -- generic shell
    ~/.profile: profile
    ~/.profile.d: profile.d
    ~/.shrc.d: shrc.d
    ~/.env: env
    ~/.env.d: env.d
    # gnu readline keybindings
    ~/.inputrc: inputrc

    # -- misc
    ~/.vimperator: vimperator
    ~/.vimperatorrc: vimperatorrc
    ~/.config/user-dirs.dirs: user-dirs.dirs

- shell:
  -
    command: |-
      cmd="$(command -v dircolors || command -v gdircolors)" || { echo "no dircolors command found " ; exit 1; }
      [ -d ~/.env.d ] || mkdir -p ~/.env.d
      $cmd colors/LS_COLORS/LS_COLORS > ~/.env.d/LS_COLORS
      chmod +x ~/.env.d/LS_COLORS
    stdin: true
    stdout: true
    stderr: true
    description: Generating LS_COLORS
    quiet: false

# ===
# SSH
# ===
- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true

- link:
    ~/.ssh: ssh

- shell:
  - ['find -L ~/.ssh -type d -exec chmod 700 {} \;', Setting ssh permissions (dirs)]
  - ['find -L ~/.ssh -type f -exec chmod 600 {} \;', Setting ssh permissions (files)]

# =========
# Alacritty
# =========
- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true
- link:
    ~/.config/alacritty/base.yml: alacritty/base.yml
    ~/.config/alacritty/base16-colors.yml: alacritty/base16-colors.yml
    ~/.config/alacritty/keybindings.yml: alacritty/keybindings.yml

- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true
      if: '[ "$(uname -s)" "==" "Darwin" ]'
- link:
    ~/.config/alacritty/base.platform.yml: alacritty/base.macos.yml
    ~/.config/alacritty/keybindings.platform.yml: alacritty/keybindings.macos.yml

- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true
      if: '[ "$(uname -s)" "==" "Linux" ]'
- link:
    ~/.config/alacritty/base.platform.yml: alacritty/base.linux.yml
    ~/.config/alacritty/keybindings.platform.yml: alacritty/keybindings.linux.yml

- shell:
  -
    command: >-
      cat
      ~/.config/alacritty/base.yml
      ~/.config/alacritty/base.platform.yml
      ~/.config/alacritty/base16-colors.yml
      ~/.config/alacritty/keybindings.yml
      ~/.config/alacritty/keybindings.platform.yml
      > ~/.config/alacritty/alacritty.yml
    stdin: true
    stdout: true
    stderr: true
    description: Generating alacritty config
    quiet: false

  -
    command: mkdir -p ~/.terminfo && cd ~/.terminfo && curl -L https://raw.githubusercontent.com/jwilm/alacritty/master/extra/alacritty.info -O && tic -xe alacritty,alacritty-direct alacritty.info
    stdin: true
    stdout: true
    stderr: true
    description: Installing alacritty terminfo
    quiet: false

# ================
# MacOS only links
# ================
- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true
      if: '[ "$(uname -s)" "==" "Darwin" ]'

- link:
    # directories
    # -----------
    ~/.config/iterm2: iterm2
    ~/.mpd: mpd
    ~/Library/Application Support/Übersicht/widgets: ubersicht/widgets
    ~/.config/brewfile: brewfile
    ~/.config/chunkwm: chunkwm
    ~/.config/yabai: yabai

    # globs
    # -----
    ~/Library/LaunchAgents/: Library/LaunchAgents/*

    # files
    # -----
    ~/Library/Preferences/com.googlecode.iterm2.plist: iterm2/com.googlecode.iterm2.plist
    ~/.chunkwmrc: chunkwm/chunkwmrc.sh
    ~/.config/yabai: yabai
    ~/.config/skhd: skhd
    ~/Library/Application Support/Übersicht/widgets: ubersicht/widgets

# ================
# Linux only links
# ================
- defaults:
    link:
      relink: true
      create: true
      relative: false
      glob: true
      if: '[ "$(uname -s)" "==" "Linux" ]'

- link:
    # directories
    # -----------
    ~/.config/sway: sway
    ~/.config/rofi: rofi
    ~/.config/fontconfig: fontconfig
    ~/.Xresources.d: Xresources.d
    ~/.config/i3status: i3status
    ~/.config/i3status-rust: i3status-rust
    ~/.config/i3: i3
    ~/.local/share/barrier: barrier
    ~/.config/udiskie: udiskie
    ~/.config/dunst: dunst
    ~/.config/pacman: pacman
    ~/.config/ranger: ranger
    ~/.config/systemd: systemd
    ~/.config/mako: mako

    # files
    # -----
    ~/.xbindkeysrc: xbindkeysrc
    ~/.Xresources: Xresources
    ~/.xinitrc: xinitrc
    ~/.xprofile: xprofile
    ~/.config/compton.conf: compton.conf
    ~/.config/mimeapps.list: mimeapps.list
    # https://wiki.archlinux.org/index.php/XDG_MIME_Applications#mimeapps.list
    ~/.local/share/mimeapps.list: mimeapps.list

# =======
# Scripts
# =======
# - shell:
#   -
#     command: $XDG_CONFIG_HOME/colors/base16_profile_helper.sh
#     stdin: true
#     stdout: true
#     stderr: true
#     description: Applying colors
#     quiet: false
