# swaywm config file

### Variables
#
# reference:
#   xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):
#
#   Shift       Shift_L (0x32),  Shift_R (0x3e)
#   lock        Caps_Lock (0x42)
#   control     Control_L (0x25),  Control_R (0x69)
#   mod1        Alt_L (0x40),  Alt_R (0x6c),  Meta_L (0xcd)
#   mod2        Num_Lock (0x4d)
#   mod3
#   mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
#   mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)

    # terminals
    # ---------
    # set $term urxvt
    set $term alacritty
    set $altterm xterm

    ### application launcher
    #
    # Note: pass the final command to swaymsg so that the resulting window can
    # be opened on the original workspace that the command was run on.
    #
    # set $menu wofi --show drun,run --insensitive --allow-images --matching fuzzy
    # set $menu "dmenu_path | dmenu | xargs swaymsg exec --"
    set $menu "rofi -i -modi drun,run,window -show drun"

    # modifiers
    # ---------
    set $win Mod4
    set $mod Mod1

    # vim-style-direction keys
    # ------------------------
    set $left h
    set $down j
    set $up k
    set $right l

### Basic Config
#
#
    focus_follows_mouse yes
    focus_wrapping no

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $altterm

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $win+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    #
    # Sway: `floating_modifier <binding> [normal|inverse]`
    #   normal:  L:resizing | R:dragging
    #   inverse: L:dragging | R:resizing
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # restart i3/sway inplace (preserves your layout/session, can be used to upgrade)
    bindsym $mod+Shift+r restart


### Misc
#
    bindsym control+$win+q exec swaylock -c 000000 --ignore-empty-password

    # screenshots
    # bindsym $win+Shift+3 exec shotgun ${XDG_PICTURES_DIR:-$HOME/pictures}/screenshot-desktop-$(date -Is).png
    bindsym $win+Shift+4 exec screenshot_wayland > ${XDG_PICTURES_DIR:-$HOME/pictures}/screenshot-region-$(date -Is).png
    bindsym $win+Ctrl+Shift+4 exec screenshot_wayland | wl-copy

#
# Windows / Containers
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    bindsym --whole-window $mod+button4 workspace next_on_output
    bindsym --whole-window $mod+button5 workspace prev_on_output

#
# Outputs:
#
    bindsym $mod+bracketleft focus output left
    bindsym $mod+bracketright focus output right

    bindsym $mod+Shift+bracketleft move container to output left; focus output left
    bindsym $mod+Shift+bracketright move container to output right; focus output right

#
# Workspaces:
#
    # Define names for default workspaces for which we configure key bindings later on.
    # We use variables to avoid repeating the names in multiple places.
    set $ws1   "1"
    set $ws2   "2"
    set $ws3   "3"
    set $ws4   "4"
    set $ws5   "5:"
    set $ws6   "6:"
    set $ws7   "7:"
    set $ws8   "8"
    set $ws9   "9"
    set $ws10  "10"

    # automatic workspace back-and-forth when switching to the
    # workspace that is currently focused
    workspace_auto_back_and_forth no

    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    bindsym $mod+n workspace next_on_output
    bindsym $mod+p workspace prev_on_output
    # bindsym $mod+Tab workspace back_and_forth

    # move focused container to workspace and follow
    bindsym $mod+Shift+1 move container to workspace number $ws1 ; workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2 ; workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3 ; workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4 ; workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5 ; workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6 ; workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7 ; workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8 ; workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9 ; workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws10 ; workspace number $ws10
    bindsym $mod+Shift+n move container to workspace next_on_output ; workspace next_on_output
    bindsym $mod+Shift+p move container to workspace prev_on_output ; workspace prev_on_output
    # bindsym $mod+Shift+Tab move container to workspace back_and_forth ; workspace back_and_forth

#
# Move workspaces
#
    # Move workspace to a different output
    bindsym $mod+Ctrl+Shift+$left move workspace to output left
    bindsym $mod+Ctrl+Shift+$down move workspace to output down
    bindsym $mod+Ctrl+Shift+$up move workspace to output up
    bindsym $mod+Ctrl+Shift+$right move workspace to output right

#
# Layout stuff:
#
    bindsym $mod+v split horizontal
    bindsym $mod+s split vertical

    # Switch the current container between different layout styles
    bindsym $mod+q layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # enter fullscreen mode for the focused container
    bindsym $mod+f fullscreen toggle

    # Toggle sticky window
    bindsym $mod+Shift+s sticky toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Focus the child container
    bindsym $mod+z focus child

#
# Scratchpad:
#
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # change focus
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # move (with sticky display-edge)
    bindsym $left  resize grow left  2 px or 2 ppt ; resize shrink right 2 px or 2 ppt
    bindsym $down  resize grow down  2 px or 2 ppt ; resize shrink up    2 px or 2 ppt
    bindsym $up    resize grow up    2 px or 2 ppt ; resize shrink down  2 px or 2 ppt
    bindsym $right resize grow right 2 px or 2 ppt ; resize shrink left  2 px or 2 ppt

    # shrink
    bindsym Ctrl+$left  resize shrink left  2 px or 2 ppt
    bindsym Ctrl+$down  resize shrink down  2 px or 2 ppt
    bindsym Ctrl+$up    resize shrink up    2 px or 2 ppt
    bindsym Ctrl+$right resize shrink right 2 px or 2 ppt

    # grow
    bindsym Shift+$left  resize grow left  2 px or 2 ppt
    bindsym Shift+$down  resize grow down  2 px or 2 ppt
    bindsym Shift+$up    resize grow up    2 px or 2 ppt
    bindsym Shift+$right resize grow right 2 px or 2 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

#
# Passthrough (for e.g. a VM)
#
mode "passthru" {
    # back to normal: Enter or Escape or $mod+r
    bindsym $mod+Shift+equal mode "default"
}
bindsym $mod+Shift+equal mode "passthru"

### Includes
#
#

include /etc/sway/config.d/*

include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/base16-colors
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/appearance
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/apps
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/idle
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/input
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/output
# include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/bar
# include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/waybar
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/keyboard

include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/startup
