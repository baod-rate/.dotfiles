### Aliases
#
    # modifiers
    # ---------
    set $alt Mod1
    set $super Mod4

    # vim-style-direction keys
    # ------------------------
    set $left h
    set $down j
    set $up k
    set $right l

### i3-specific configs
#
#
    set $exit_command "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

    exec --no-startup-id "xrdb ~/.Xresources"
    exec --no-startup-id "unclutter"

    ### base16
    #
    # Set base16 variables from XResources
    #
    set_from_resource $base00 i3wm.color0  #181818
    set_from_resource $base03 i3wm.color8  #585858
    set_from_resource $base05 i3wm.color7  #D8D8D8
    set_from_resource $base07 i3wm.color15 #F8F8F8
    set_from_resource $base08 i3wm.color1  #AB4642
    set_from_resource $base0A i3wm.color3  #F7CA88
    set_from_resource $base0B i3wm.color2  #A1B56C
    set_from_resource $base0C i3wm.color6  #86C1B9
    set_from_resource $base0D i3wm.color4  #7CAFC2
    set_from_resource $base0E i3wm.color5  #BA8BAF
    # base16-256
    set_from_resource $base01 i3wm.color18 #282828
    set_from_resource $base02 i3wm.color19 #383838
    set_from_resource $base04 i3wm.color20 #B8B8B8
    set_from_resource $base06 i3wm.color21 #E8E8E8
    set_from_resource $base09 i3wm.color16 #DC9656
    set_from_resource $base0F i3wm.color17 #A16946
    # base16 non-256
    # set_from_resource $base01 i3wm.color10 #282828
    # set_from_resource $base02 i3wm.color11 #383838
    # set_from_resource $base04 i3wm.color12 #B8B8B8
    # set_from_resource $base06 i3wm.color13 #E8E8E8
    # set_from_resource $base09 i3wm.color9  #DC9656
    # set_from_resource $base0F i3wm.color14 #A16946

### Application behavior
#
#
    # for_window [class="feh"] floating enable

### Variables
#
# reference:
#   xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):
#
#   shift       Shift_L (0x32),  Shift_R (0x3e)
#   lock        Caps_Lock (0x42)
#   control     Control_L (0x25),  Control_R (0x69)
#   mod1        Alt_L (0x40),  Alt_R (0x6c),  Meta_L (0xcd)
#   mod2        Num_Lock (0x4d)
#   mod3
#   mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
#   mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)

    # terminals
    # ---------
    set $urxvt "urxvtc ; if [ $? -eq 2 ]; then urxvtd -q -o -f && urxvtc ; fi"
    set $altterm i3-sensible-terminal
    # exec --no-startup-id "pidof -x $(basename urxvtd) || urxvtd -q -o -f"
    # set $term $SCRIPTS_DIR/urxvtc.sh
    # set $term alacritty

    ### application launcher
    #
    # Note: it's recommended that you pass the final command to sway
    # set $menu dmenu_path | dmenu | xargs swaymsg exec
    #
    set $menu "rofi -modi combi -show combi -combi-modi 'drun,run,ssh,window'"

### Look
#
# Colors
# Values defined in $XDG_CONFIG_HOME/sway/config.d/base16-colors.config
#
    # ansi    Color        | base16 Description
    # -------------------- | ------------------
    # color00 Black        | base00 Default Background
    # color18              | base01 Lighter Background (Used for status bars)
    # color19              | base02 Selection Background
    # color08 Bright_Black | base03 Comments, Invisibles, Line Highlighting
    # color20              | base04 Dark Foreground (Used for status bars)
    # color07 White        | base05 Default Foreground, Caret, Delimiters, Operators
    # color21              | base06 Light Foreground (Not often used)
    # color15 Bright_White | base07 Light Background (Not often used)
    # color01 Red          | base08 Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
    # color16              | base09 Integers, Boolean, Constants, XML Attributes, Markup Link Url
    # color03 Yellow       | base0A Classes, Markup Bold, Search Text Background
    # color02 Green        | base0B Strings, Inherited Class, Markup Code, Diff Inserted
    # color06 Cyan         | base0C Support, Regular Expressions, Escape Characters, Markup Quotes
    # color04 Blue         | base0D Functions, Methods, Attribute IDs, Headings
    # color05 Magenta      | base0E Keywords, Storage, Selector, Markup Italic, Diff Changed
    # color17              | base0F Deprecated, Opening/Closing Embedded Language Tags, e.g. <?php ?>

    ### Colors
    #
    # Color configuration for windows and borders using the Base16 variables
    #

    # Property Name         Border  BG      Text    Indicator Child Border
    client.focused          $base02 $base02 $base06 $base0B   $base0D
    client.focused_inactive $base01 $base01 $base03 $base0D   $base02
    client.unfocused        $base01 $base00 $base03 $base00   $base01
    client.urgent           $base08 $base08 $base00 $base08   $base08
    # i3-only
    client.placeholder      $base05 $base05 $base07 $base00   $base05
    client.background       $base02

    ### Window Decorations
    #
    # new_window pixel
    hide_edge_borders smart_no_gaps
    # smart_borders no_gaps
    default_border pixel 2
    gaps inner 8
    gaps outer 0
    smart_gaps on

    ### Font
    #
    # Font for window titles. Will also be used by the bar unless a different font
    # is used in the bar {} block below.
    #
    font pango:Overpass 9

    # This font is widely installed, provides lots of unicode glyphs, right-to-left
    # text rendering and scalability on retina/hidpi displays (thanks to pango).
    #font pango:DejaVu Sans Mono 8

    # Before i3 v4.8, we used to recommend this one as the default:
    # font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
    # The font above is very space-efficient, that is, it looks good, sharp and
    # clear in small sizes. However, its unicode glyph coverage is limited, the old
    # X core fonts rendering does not support right-to-left and this being a bitmap
    # font, it doesn’t scale on retina/hidpi displays.

    ### Status Bar
    #
    # bar: `man 5 sway-bar` / `man i3bar`
    # status: `man i3status`
    #
    bar {
        position top

        workspace_buttons yes
        binding_mode_indicator yes

        tray_output primary

        strip_workspace_numbers yes

        status_command "i3status --config ~/.config/i3status/essentials.conf | sed --unbuffered -e 's/#FF0000/$base08/g' -e 's/#00FF00/$base0B/g'"

        colors {
            background $base00
            separator  $base03
            statusline $base04

            # # Property Name         Border  BG      Text    Indicator Child Border
            # client.focused          $base02 $base02 $base06 $base0B   $base0D
            # client.focused_inactive $base01 $base01 $base03 $base0D   $base02
            # client.unfocused        $base01 $base00 $base03 $base00   $base01
            # client.urgent           $base08 $base08 $base00 $base08   $base08
            # # i3-only
            # client.placeholder      $base05 $base05 $base07 $base00   $base05
            # client.background       $base02

            # State             Border  BG      Text
            focused_workspace   $base02 $base02 $base07
            active_workspace    $base05 $base02 $base00
            inactive_workspace  $base00 $base00 $base05
            urgent_workspace    $base08 $base08 $base00
            binding_mode        $base00 $base0A $base00
        }
    }

    ### Status Bar
    #
    # bar: `man 5 sway-bar` / `man i3bar`
    # status: `man i3status`
    #
    bar {
        position bottom

        # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
        # status_command i3status-rs ~/.config/i3status-rust/config.toml
        status_command "i3status --config ~/.config/i3status/stats.conf | sed --unbuffered -e 's/#FF0000/$base08/g' -e 's/#00FF00/$base0B/g'"

        workspace_buttons no
        binding_mode_indicator no

        tray_output none

        colors {
            background $base00
            separator  $base03
            statusline $base04
        }
    }


### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $super+Return exec $urxvt
    bindsym $super+Shift+Return exec $altterm

    # kill focused window
    bindsym $super+Shift+q kill

    # start your launcher
    bindsym $super+d exec $menu

    # Drag floating windows by holding down $super and left mouse button.
    # Resize them with right mouse button + $super.
    # Despite the name, also works for non-floating windows.
    #
    # Sway: `floating_modifier <binding> [normal|inverse]`
    #   normal:  L:resizing | R:dragging
    #   inverse: L:dragging | R:resizing
    floating_modifier $super

    # reload the configuration file
    bindsym $super+c reload

    # restart i3/sway inplace (preserves your layout/session, can be used to upgrade)
    bindsym $super+Shift+c restart

    # exit i3/sway (logs you out of your X/Wayland session)
    bindsym $super+Shift+e exec $exit_command

    focus_follows_mouse no

#
# Moving around:
#
    # Move your focus around
    bindsym $super+$left focus left
    bindsym $super+$down focus down
    bindsym $super+$up focus up
    bindsym $super+$right focus right
    # or use $super+[up|down|left|right]
    bindsym $super+Left focus left
    bindsym $super+Down focus down
    bindsym $super+Up focus up
    bindsym $super+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $super+Shift+$left move left
    bindsym $super+Shift+$down move down
    bindsym $super+Shift+$up move up
    bindsym $super+Shift+$right move right
    # ditto, with arrow keys
    bindsym $super+Shift+Left move left
    bindsym $super+Shift+Down move down
    bindsym $super+Shift+Up move up
    bindsym $super+Shift+Right move right

#
# Outputs:
#
    bindsym $super+bracketright focus output left
    bindsym $super+bracketleft focus output right

    bindsym $super+Shift+bracketleft move container to output left; focus output left
    bindsym $super+Shift+bracketright move container to output right; focus output right

#
# Workspaces:
#
    # Define names for default workspaces for which we configure key bindings later on.
    # We use variables to avoid repeating the names in multiple places.
    set $ws1   "1:一"
    set $ws2   "2:二"
    set $ws3   "3:三"
    set $ws4   "4:四"
    set $ws5   "5:五"
    set $ws6   "6:六"
    set $ws7   "7:七"
    set $ws8   "8:八"
    set $ws9   "9:九"
    set $ws10 "10:十"

    # automatic workspace back-and-forth when switching to the
    # workspace that is currently focused
    workspace_auto_back_and_forth no

    # switch to workspace
    bindsym $super+1 workspace $ws1
    bindsym $super+2 workspace $ws2
    bindsym $super+3 workspace $ws3
    bindsym $super+4 workspace $ws4
    bindsym $super+5 workspace $ws5
    bindsym $super+6 workspace $ws6
    bindsym $super+7 workspace $ws7
    bindsym $super+8 workspace $ws8
    bindsym $super+9 workspace $ws9
    bindsym $super+0 workspace $ws10
    bindsym --whole-window $super+button4 workspace next_on_output
    bindsym --whole-window $super+button5 workspace prev_on_output
    bindsym $super+n workspace next
    bindsym $super+p workspace prev
    bindsym $super+Tab workspace back_and_forth

    # move focused container to workspace and follow
    bindsym $super+Shift+1 move container to workspace number $ws1 ; workspace number $ws1
    bindsym $super+Shift+2 move container to workspace number $ws2 ; workspace number $ws2
    bindsym $super+Shift+3 move container to workspace number $ws3 ; workspace number $ws3
    bindsym $super+Shift+4 move container to workspace number $ws4 ; workspace number $ws4
    bindsym $super+Shift+5 move container to workspace number $ws5 ; workspace number $ws5
    bindsym $super+Shift+6 move container to workspace number $ws6 ; workspace number $ws6
    bindsym $super+Shift+7 move container to workspace number $ws7 ; workspace number $ws7
    bindsym $super+Shift+8 move container to workspace number $ws8 ; workspace number $ws8
    bindsym $super+Shift+9 move container to workspace number $ws9 ; workspace number $ws9
    bindsym $super+Shift+0 move container to workspace number $ws10 ; workspace number $ws10
    bindsym $super+Shift+n move container to workspace next ; workspace next
    bindsym $super+Shift+p move container to workspace prev ; workspace prev
    bindsym $super+Shift+Tab move container to workspace back_and_forth ; workspace back_and_forth

#
# Move workspaces
#
    # Move workspace to a different output
    bindsym $super+Ctrl+Shift+$left move workspace to output left
    bindsym $super+Ctrl+Shift+$down move workspace to output down
    bindsym $super+Ctrl+Shift+$up move workspace to output up
    bindsym $super+Ctrl+Shift+$right move workspace to output right
    # ditto, with arrow keys
    bindsym $super+Ctrl+Shift+Left move workspace to output left
    bindsym $super+Ctrl+Shift+Down move workspace to output down
    bindsym $super+Ctrl+Shift+Up move workspace to output up
    bindsym $super+Ctrl+Shift+Right move workspace to output right

#
# Layout stuff:
#
    # "split" the current object of focus with
    bindsym $super+v split horizontal
    bindsym $super+s split vertical

    # Switch the current container between different layout styles
    bindsym $super+q layout stacking
    bindsym $super+w layout tabbed
    bindsym $super+e layout toggle split

    # enter fullscreen mode for the focused container
    bindsym $super+f fullscreen toggle

    # Toggle sticky window
    bindsym $super+Shift+s sticky toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $super+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $super+space focus mode_toggle

    # move focus to the parent container
    bindsym $super+z focus parent

    # focus the child container
    bindsym $super+x focus child

### Scratchpad
#
# a bag of holding for windows
# You can send windows there and get them back later.
#
    # Move the currently focused window to the scratchpad
    bindsym $super+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $super+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # change focus
    bindsym $super+$left focus left
    bindsym $super+$down focus down
    bindsym $super+$up focus up
    bindsym $super+$right focus right

    # move (with sticky display-edge)
    bindsym $left  resize grow left  2 px or 2 ppt ; resize shrink right 2 px or 2 ppt
    bindsym $down  resize grow down  2 px or 2 ppt ; resize shrink up    2 px or 2 ppt
    bindsym $up    resize grow up    2 px or 2 ppt ; resize shrink down  2 px or 2 ppt
    bindsym $right resize grow right 2 px or 2 ppt ; resize shrink left  2 px or 2 ppt

    # shrink
    bindsym Ctrl+$left  resize shrink left  2 px or 2 ppt
    bindsym Ctrl+$down  resize shrink down  2 px or 2 ppt
    bindsym Ctrl+$up    resize shrink up    2 px or 2 ppt
    bindsym Ctrl+$right resize shrink right 2 px or 2 ppt

    # grow
    bindsym Shift+$left  resize grow left  2 px or 2 ppt
    bindsym Shift+$down  resize grow down  2 px or 2 ppt
    bindsym Shift+$up    resize grow up    2 px or 2 ppt
    bindsym Shift+$right resize grow right 2 px or 2 ppt

    # back to normal: Enter or Escape or $super+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $super+r mode "default"
}
bindsym $super+r mode "resize"

### Special buttons
#
# Volume Buttons:
#
    bindsym XF86AudioMute exec "pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle"
    bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%"
    bindsym XF86AudioLowerVolume exec "pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%"
    bindsym XF86AudioMicMute exec "pactl set-source-mute $(pacmd list-sources |awk '/* index:/{print $3}') toggle"

#
# Backlight Buttons:
#
    bindsym XF86MonBrightnessUp   exec "brightnessctl s 5%+"
    bindsym XF86MonBrightnessDown exec "brightnessctl s 5%-"

### Startup programs
#
# Launch utils
#
    # set wallpaper
    exec --no-startup-id "feh --bg-fill --randomize --recursive --no-fehbg ~/wallpapers/*"
    # exec --no-startup-id "compton -b -c"
    # exec --no-startup-id "pidof -x $(basename lxqt-policykit-agent) || lxqt-policykit-agent"
