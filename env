#!/bin/sh

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

# fix for https://github.com/swaywm/sway/issues/595
export _JAVA_AWT_WM_NONREPARENTING=1

export SCRIPTS_DIR="$HOME/bin"

# workaround for issue with qtwebengine + opengl + nouveau
# see https://bugs.archlinux.org/task/59057
export QT_XCB_FORCE_SOFTWARE_OPENGL=1

export DOTNET_CLI_TELEMETRY_OPTOUT=1

# ==============================================================================
# update paths
# ==============================================================================
appendpath () {
    case ":$PATH:" in
        *:"$1":*)
            ;;
        *)
            PATH="${PATH:+$PATH:}$1"
    esac
}

# ==> setup PATH variable
PATH=$(getconf PATH)
MANPATH=$(getconf MANPATH 2>/dev/null)
INFOPATH=$(getconf INFOPATH 2>/dev/null)

[ -z "$XDG_CONFIG_HOME"  ] && export XDG_CONFIG_HOME="$HOME/.config"
[ -z "$XDG_DATA_HOME"    ] && export XDG_DATA_HOME="$HOME/.local/share"
[ -z "$XDG_RUNTIME_DIR"  ] && export XDG_RUNTIME_DIR="$HOME/.run"
[ -z "$XDG_CACHE_HOME"   ] && export XDG_CACHE_HOME="$HOME/.cache"

[ -d "$XDG_CONFIG_HOME"  ] || mkdir -p "$XDG_CONFIG_HOME"
[ -d "$XDG_DATA_HOME"    ] || mkdir -p "$XDG_DATA_HOME"
[ -d "$XDG_RUNTIME_DIR"  ] || mkdir -p "$XDG_RUNTIME_DIR"
[ -d "$XDG_CACHE_HOME"   ] || mkdir -p "$XDG_CACHE_HOME"

[ -d "$SCRIPTS_DIR" ] && appendpath "$SCRIPTS_DIR"
[ -d "/usr/local/opt/llvm/bin" ] && appendpath "/usr/local/opt/llvm/bin"
[ -d "/usr/local/opt/ccache/libexec" ] && appendpath "/usr/local/opt/ccache/libexec"

# ==> rust
[ -d "$HOME/.cargo/bin" ] && appendpath "$HOME/.cargo/bin"

# ==> python
export PYTHONUSERBASE=${PYTHONUSERBASE:-"$HOME/.local"}
[ -d "$PYTHONUSERBASE/bin" ] && appendpath "$PYTHONUSERBASE/bin"
[ -d "$HOME/.poetry/bin" ] && appendpath "$HOME/.poetry/bin"
export PYENV_ROOT="$HOME/.pyenv"
[ -d "$HOME/.pyenv" ] && appendpath "$PYENV_ROOT"

# ==> npm
export npm_config_prefix="$XDG_DATA_HOME/npm"
export npm_config_cache="$XDG_CACHE_HOME/npm"
[ -d "$npm_config_prefix" ] && appendpath "$npm_config_prefix/bin"

unset appendpath
export PATH
export MANPATH="$MANPATH"
export INFOPATH=":$INFOPATH"

# ==============================================================================

# ==============================================================================
# inlude other env files
# ==============================================================================
for file in $HOME/.env.d/*; do
  if [ -r "$file" ]; then
    . "$file"
  fi
done
